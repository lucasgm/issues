  Identity added: /runner/artifacts/9017/ssh_key_data (svc_ansible_poc@intcx.net)
SSH password: 

PLAY [Ingest exec plan and build host phase maps] ******************************

TASK [Load options (for PROXY/ENABLEREPO/DISABLEREPO)] *************************
ok: [localhost]

TASK [Read execplan.yml] *******************************************************
ok: [localhost]

TASK [Compose yum repo flags] **************************************************
ok: [localhost]

TASK [Build dynamic host list from serverFilters] ******************************
ok: [localhost]

TASK [Fail if no hosts] ********************************************************
ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [Build per-host phase map (STOP/DOWNLOAD/INSTALL/START/HEALTH_CHECK)] *****
ok: [localhost]

TASK [Register dynamic hosts with per-host variables] **************************
changed: [localhost] => (item=m4s-d545-ifroes-01)

PLAY [STOP phase] **************************************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Stop (Linux)] ************************************************************

TASK [deploy_service : Build stop/stopHealth (Linux)] **************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) would stop (Linux)] *****************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) would verify stopped (Linux)] *******************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Stop services (Linux)] **********************************
changed: [m4s-d545-ifroes-01] => (item=sudo /usr/bin/systemctl stop rop_edgeservice)

TASK [deploy_service : Verify stopped (Linux)] *********************************
ok: [m4s-d545-ifroes-01] => (item=! systemctl status rop_edgeservice)

TASK [Stop (Windows)] **********************************************************
skipping: [m4s-d545-ifroes-01]

PLAY [DOWNLOAD phase] **********************************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Download artifacts for each service on this host] ************************

TASK [deploy_service : ansible.builtin.setup] **********************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Build download list] ************************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Download each container (check-safe include)] ***********
included: /runner/project/roles/deploy_service/tasks/download_artifact.yml for m4s-d545-ifroes-01 => (item=ICErop_edgeservice:0.0.34)

TASK [deploy_service : Gather minimal facts (for os_family)] *******************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Normalise Artifactory vars] *****************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Derive artifact id and extension] ***********************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Determine OS family (lowercased)] ***********************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Compute destination directory] **************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Compute filename] ***************************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Compute full destination path] **************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Assert dest_path is a valid string] *********************
ok: [m4s-d545-ifroes-01] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [deploy_service : ansible.builtin.debug] **********************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : ansible.builtin.set_fact] *******************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Build GAVC search URL (no whitespace)] ******************
ok: [m4s-d545-ifroes-01 -> localhost]

TASK [deploy_service : Search Artifactory (GAVC)] ******************************
ok: [m4s-d545-ifroes-01 -> localhost]

TASK [deploy_service : Get first downloadable URL] *****************************
ok: [m4s-d545-ifroes-01 -> localhost]

TASK [deploy_service : Fail early if nothing found] ****************************
ok: [m4s-d545-ifroes-01] => {
    "changed": false,
    "msg": "All assertions passed"
}

TASK [deploy_service : Download artefact (Linux)] ******************************
changed: [m4s-d545-ifroes-01]

TASK [deploy_service : Mark download result] ***********************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Accumulate downloaded RPM path for this host (Linux RPM only)] ***
ok: [m4s-d545-ifroes-01]

PLAY [INSTALL phase] ***********************************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Host-wide install (Linux)] ***********************************************

TASK [deploy_service : Collect RPM paths and INSTALL hooks (Linux)] ************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Prefer RPM paths captured during DOWNLOAD (if any)] *****
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Choose package manager] *********************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Normalize proxy value] **********************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Build proxy flag and repo flags] ************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Derive package NAMES from RPM files] ********************
ok: [m4s-d545-ifroes-01] => (item=/tmp/ICErop_edgeservice-0.0.34.rpm)

TASK [deploy_service : Derive package NEVRs from RPM files] ********************
ok: [m4s-d545-ifroes-01] => (item=/tmp/ICErop_edgeservice-0.0.34.rpm)

TASK [deploy_service : Collect unique package names and file NEVRs] ************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Check which package names are already installed] ********
ok: [m4s-d545-ifroes-01] => (item=ICErop_edgeservice)

TASK [deploy_service : Build list of installed package names] ******************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Get installed NEVRs for those names] ********************
ok: [m4s-d545-ifroes-01] => (item=ICErop_edgeservice)

TASK [deploy_service : Collect installed NEVRs (unique)] ***********************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Build rpm join lists] ***********************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Choose removal candidates (NEVRs preferred, else names)] ***
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Join removal candidate list (plain and quoted)] *********
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Build install/remove commands (strings)] ****************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : DEBUG (temp): planned remove/install commands + inputs] ***
ok: [m4s-d545-ifroes-01] => {
    "msg": "pm: dnf\\nproxy_flag: --setopt=proxy=http://proxy:8080\\nrepo_flags: --disablerepo=puppet*,rm-ice-snapshots,public*,pulp*,hp-spp*,pc_* --enablerepo=rmdr-*,rm-shared*,rm-bonds,rmpt-*,rmids-sd\\nrpm_paths: [\\n    \\"/tmp/ICErop_edgeservice-0.0.34.rpm\\"\\n]\\nrpm_file_nevrs: [\\n    \\"ICErop_edgeservice-0.0.34-1.noarch\\"\\n]\\nrpm_pkg_names: [\\n    \\"ICErop_edgeservice\\"\\n]\\nrpm_installed_names: [\\n    \\"ICErop_edgeservice\\"\\n]\\nrpm_installed_nevrs: [\\n    \\"ICErop_edgeservice-0.0.34-1.noarch\\"\\n]\\nremove_candidates: [\\n    \\"ICErop_edgeservice-0.0.34-1.noarch\\"\\n]\\nremove_joined: ICErop_edgeservice-0.0.34-1.noarch\\nremove_joined_q: \\\\\\"ICErop_edgeservice-0.0.34-1.noarch\\\\\\"\\nremove_cmd:  /usr/bin/sudo rpm -e --nodeps \\\\\\"ICErop_edgeservice-0.0.34-1.noarch\\\\\\" \\\\ || /usr/bin/sudo rpm -e --nodeps --noscripts \\\\\\"ICErop_edgeservice-0.0.34-1.noarch\\\\\\" \\\\ || true \\ninstall_cmd: /usr/bin/sudo dnf -y --setopt=proxy=http://proxy:8080 --disablerepo=puppet*,rm-ice-snapshots,public*,pulp*,hp-spp*,pc_* --enablerepo=rmdr-*,rm-shared*,rm-bonds,rmpt-*,rmids-sd install --allowerasing --best=0 \\"/tmp/ICErop_edgeservice-0.0.34.rpm\\" || /usr/bin/sudo dnf -y --setopt=proxy=http://proxy:8080 --disablerepo=puppet*,rm-ice-snapshots,public*,pulp*,hp-spp*,pc_* --enablerepo=rmdr-*,rm-shared*,rm-bonds,rmpt-*,rmids-sd downgrade \\"/tmp/ICErop_edgeservice-0.0.34.rpm\\"\\n"
}

TASK [deploy_service : (check) BEFORE INSTALL hooks to run] ********************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) Would run remove + single package-manager line] ***
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) AFTER INSTALL hooks to run] *********************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Record simulated install summary (Linux, check mode)] ***
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : BEFORE INSTALL hooks] ***********************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Skip if no RPMs to install on this host] ****************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : DEBUG before-remove: installed state for target names] ***
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : Remove currently-installed packages (NEVRs preferred, fallback to names)] ***
changed: [m4s-d545-ifroes-01]

TASK [deploy_service : DEBUG remove result (rc/stdout/stderr)] *****************
ok: [m4s-d545-ifroes-01] => {
    "msg": "rc: 0\\nstdout:\\n\\nstderr:\\n+ /usr/bin/sudo rpm -e --nodeps '\\"ICErop_edgeservice-0.0.34-1.noarch\\"' ' '\\n  error: package \\"ICErop_edgeservice-0.0.34-1.noarch\\" is not installed\\n  error: package   is not installed\\n  + /usr/bin/sudo rpm -e --nodeps --noscripts '\\"ICErop_edgeservice-0.0.34-1.noarch\\"' ' '\\n  error: package \\"ICErop_edgeservice-0.0.34-1.noarch\\" is not installed\\n  error: package   is not installed\\n  + true\\n"
}

TASK [deploy_service : Verify removals (non-fatal check)] **********************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : DEBUG after-remove verification] ************************
ok: [m4s-d545-ifroes-01] => {
    "msg": "remove_verify_rc: 1\\nremove_verify_stdout:\\nICErop_edgeservice still installed\\nremove_verify_stderr:\\n"
}

TASK [deploy_service : Run package install/downgrade (single line)] ************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : DEBUG install result (rc/stdout/stderr)] ****************
ok: [m4s-d545-ifroes-01] => {
    "msg": "rc: 0\\nstdout:\\nusage: dnf [-c [config file]] [-q] [-v] [--version] [--installroot [path]]\\n             [--nodocs] [--noplugins] [--enableplugin [plugin]]\\n             [--disableplugin [plugin]] [--releasever RELEASEVER]\\n             [--setopt SETOPTS] [--skip-broken] [-h] [--allowerasing]\\n             [-b | --nobest] [-C] [-R [minutes]] [-d [debug level]]\\n             [--debugsolver] [--showduplicates] [-e ERRORLEVEL] [--obsoletes]\\n             [--rpmverbosity [debug level name]] [-y] [--assumeno]\\n             [--enablerepo [repo]] [--disablerepo [repo] | --repo [repo]]\\n             [--enable | --disable] [-x [package]] [--disableexcludes [repo]]\\n             [--repofrompath [repo,path]] [--noautoremove] [--nogpgcheck]\\n             [--color COLOR] [--refresh] [-4] [-6] [--destdir DESTDIR]\\n             [--downloadonly] [--comment COMMENT] [--bugfix] [--enhancement]\\n             [--newpackage] [--security] [--advisory ADVISORY] [--bz BUGZILLA]\\n             [--cve CVES] [--sec-severity {Critical,Important,Moderate,Low}]\\n             [--forcearch ARCH]\\n  ICE Artifactory Bonds Releases                  465 kB/s | 3.8 kB     00:00    \\n  ICE-CM Nexus Shared (i.e. tomcat, jboss, Java.. 409 kB/s | 3.8 kB     00:00    \\n  ICE-BP - Bondpoint Releases                     550 kB/s | 3.8 kB     00:00    \\n  ICE-CM Nexus C++ builds Releases Repository     449 kB/s | 3.8 kB     00:00    \\n  ICE-CM Nexus Creditex Releases Repository       442 kB/s | 3.8 kB     00:00    \\n  ICE-MERS repository                             387 kB/s | 3.8 kB     00:00    \\n  ICE-CM Nexus Trading Releases Repository        329 kB/s | 3.8 kB     00:00    \\n  ICE-CM Nexus Yellow Jacket Releases Repository  312 kB/s | 3.7 kB     00:00    \\n  ICE-RM IDS SuperDerivatives Repository          259 kB/s | 3.8 kB     00:00    \\n  ICE-CM Clearing Releases Repository             511 kB/s | 3.8 kB     00:00    \\n  ICE-CM ICElink Legacy Releases Repository       551 kB/s | 3.8 kB     00:00    \\n  ICE-CM Tradevault Releases Repository           471 kB/s | 3.8 kB     00:00    \\n  Last metadata expiration check: 1:15:49 ago on Sat Aug 30 16:52:30 2025.\\n  Dependencies resolved.\\n  Nothing to do.\\n  Complete!\\nstderr:\\n+ /usr/bin/sudo dnf -y --setopt=proxy=http://proxy:8080 '--disablerepo=puppet*,rm-ice-snapshots,public*,pulp*,hp-spp*,pc_*' '--enablerepo=rmdr-*,rm-shared*,rm-bonds,rmpt-*,rmids-sd' install --allowerasing --best=0 /tmp/ICErop_edgeservice-0.0.34.rpm\\n  Command line error: argument -b/--best: ignored explicit argument '0'\\n  + /usr/bin/sudo dnf -y --setopt=proxy=http://proxy:8080 '--disablerepo=puppet*,rm-ice-snapshots,public*,pulp*,hp-spp*,pc_*' '--enablerepo=rmdr-*,rm-shared*,rm-bonds,rmpt-*,rmids-sd' downgrade /tmp/ICErop_edgeservice-0.0.34.rpm\\n  No repository match: hp-spp*\\n  No repository match: rm-ice-snapshots\\n  No repository match: pulp*\\n  No repository match: public*\\n  No repository match: puppet*\\n  Errors during downloading metadata for repository 'rm-bonds':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rm-bonds/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rm-bonds': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rm-shared':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rm-shared/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rm-shared': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-bondpoint':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmdr-bondpoint/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-bondpoint': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-cpp':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/cpp-releases/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-cpp': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-creditex':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmdr-creditex/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-creditex': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-mers':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmdr-mers/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-mers': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-trading':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmdr-trading/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-trading': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmdr-yj':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmdr-yj/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmdr-yj': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmids-sd':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmids-sd/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmids-sd': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmpt-clearing':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmpt-clearing/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmpt-clearing': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmpt-icelink':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmpt-icelink/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmpt-icelink': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Errors during downloading metadata for repository 'rmpt-tradevault':\\n    - Status code: 403 for http://svc-ymrd:D3adp0ol@artif/artifactory/rmpt-tradevault/repodata/repomd.xml (IP: 10.188.98.52)\\n  Error: Failed to download metadata for repo 'rmpt-tradevault': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried\\n  Ignoring repositories: rm-bonds, rm-shared, rmdr-bondpoint, rmdr-cpp, rmdr-creditex, rmdr-mers, rmdr-trading, rmdr-yj, rmids-sd, rmpt-clearing, rmpt-icelink, rmpt-tradevault\\n  Package ICErop_edgeservice of lower version already installed, cannot downgrade it.\\n"
}

TASK [deploy_service : DEBUG after-install: installed state for target names] ***
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : AFTER INSTALL hooks] ************************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Record install summary (Linux)] *************************
ok: [m4s-d545-ifroes-01]

TASK [Host-wide install (Windows)] *********************************************
skipping: [m4s-d545-ifroes-01]

PLAY [START phase] *************************************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Start (Linux)] ***********************************************************

TASK [deploy_service : Build start & hooks (Linux)] ****************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) BEFORE start hooks] *****************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) would start (Linux)] ****************************
ok: [m4s-d545-ifroes-01] => {
    "_start_cmds": [
        "sudo /usr/bin/systemctl start rop_edgeservice"
    ]
}

TASK [deploy_service : (check) AFTER start hooks] ******************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Push simulated start summary (Linux)] *******************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : BEFORE start hooks] *************************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Start services (Linux)] *********************************
changed: [m4s-d545-ifroes-01] => (item=sudo /usr/bin/systemctl start rop_edgeservice)

TASK [deploy_service : AFTER start hooks] **************************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Push start summary (Linux)] *****************************
ok: [m4s-d545-ifroes-01]

TASK [Start (Windows)] *********************************************************
skipping: [m4s-d545-ifroes-01]

PLAY [HEALTH_CHECK phase] ******************************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Health (Linux)] **********************************************************

TASK [deploy_service : Build health list (Linux)] ******************************
ok: [m4s-d545-ifroes-01]

TASK [deploy_service : (check) would health-check (Linux)] *********************
ok: [m4s-d545-ifroes-01] => {
    "_health_cmds": [
        "systemctl status rop_edgeservice"
    ]
}

TASK [deploy_service : Push simulated health summary (Linux)] ******************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Health check (Linux)] ***********************************
ok: [m4s-d545-ifroes-01] => (item=systemctl status rop_edgeservice)

TASK [deploy_service : Build failed health details] ****************************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Debug failed health checks (rc/stdout/stderr)] **********
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Fail if any health checks failed] ***********************
skipping: [m4s-d545-ifroes-01]

TASK [deploy_service : Push health summary (Linux)] ****************************
ok: [m4s-d545-ifroes-01]

TASK [Health (Windows)] ********************************************************
skipping: [m4s-d545-ifroes-01]

PLAY [POST_DEPLOY cleanup and SE Tools] ****************************************

TASK [ansible.builtin.setup] ***************************************************
ok: [m4s-d545-ifroes-01]

TASK [Run post_deploy role (SE Tools + cleanup)] *******************************

TASK [post_deploy : Run Maven to download the artifact] ************************
included: /runner/project/roles/post_deploy/tasks/run_setools.yml for m4s-d545-ifroes-01

TASK [post_deploy : Set SE Tools execution stage] ******************************
ok: [m4s-d545-ifroes-01]

TASK [post_deploy : Debug SE Tools execution stage] ****************************
ok: [m4s-d545-ifroes-01] => {
    "msg": "Starting execution stage: SETOOLS"
}

TASK [post_deploy : Skip SE Tools execution for Windows deployments] ***********
ok: [m4s-d545-ifroes-01]

TASK [post_deploy : Exit if SE Tools execution is not needed] ******************
skipping: [m4s-d545-ifroes-01]

TASK [post_deploy : Determine sudo command based on package type] **************
ok: [m4s-d545-ifroes-01]

TASK [post_deploy : Set SE Tools wrapper command] ******************************
ok: [m4s-d545-ifroes-01]

TASK [post_deploy : Execute SE Tools wrapper command on all hosts] *************
changed: [m4s-d545-ifroes-01]

TASK [post_deploy : Debug SE Tools execution result] ***************************
ok: [m4s-d545-ifroes-01] => {
    "msg": [
        "Stage: SETOOLS",
        "SE Tools execution result:",
        []
    ]
}

TASK [post_deploy : Clean up files after staging] ******************************
included: /runner/project/roles/post_deploy/tasks/cleanup_artifacts.yml for m4s-d545-ifroes-01

TASK [post_deploy : Gather list of downloaded artifacts from this host] ********
ok: [m4s-d545-ifroes-01]

TASK [post_deploy : Debug host download list] **********************************
ok: [m4s-d545-ifroes-01] => {
    "msg": "Host m4s-d545-ifroes-01 has 1 downloaded artifacts: ['/tmp/ICErop_edgeservice-0.0.34.rpm']"
}

TASK [post_deploy : Remove downloaded artifacts (Linux)] ***********************
changed: [m4s-d545-ifroes-01] => (item=/tmp/ICErop_edgeservice-0.0.34.rpm)

TASK [post_deploy : Debug cleanup result] **************************************
ok: [m4s-d545-ifroes-01] => {
    "msg": "Removed 1 artifacts for m4s-d545-ifroes-01 (if present)."
}

TASK [Mark post_deploy attempted] **********************************************
ok: [m4s-d545-ifroes-01] => {
    "msg": "post_deploy attempted on m4s-d545-ifroes-01"
}

PLAY [Aggregate results and fail on errors] ************************************

TASK [Collect stats (normalize shapes)] ****************************************
ok: [localhost]

TASK [Show summarized results] *************************************************
ok: [localhost] => {
    "msg": {
        "failed_health": "0",
        "failed_installs": "0",
        "failed_starts": "0"
    }
}

TASK [Fail if any install/start/health failures] *******************************
skipping: [localhost]

PLAY RECAP *********************************************************************
localhost                  : ok=9    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
m4s-d545-ifroes-01         : ok=74   changed=6    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
