#roles/deploy_service/tasks/start_only_linux.yml
- name: Build start & hooks (Linux)
  ansible.builtin.set_fact:
    _start_cmds: >-
      {{
        phase_services | map(attribute='containers') | sum(start=[])
        | map(attribute='serviceCommands') | select('defined')
        | map(attribute='start') | reject('equalto', None)
        | map('trim') | reject('equalto','') | list
      }}
    _start_before: >-
      {{
        phase_services | map(attribute='actionCommands') | sum(start=[])
        | selectattr('action','equalto','START')
        | selectattr('runStage','equalto','BEFORE')
        | map(attribute='command') | map('trim') | reject('equalto','') | list
      }}
    _start_after: >-
      {{
        phase_services | map(attribute='actionCommands') | sum(start=[])
        | selectattr('action','equalto','START')
        | selectattr('runStage','equalto','AFTER')
        | map(attribute='command') | map('trim') | reject('equalto','') | list
      }}

- block:
    - name: (check) BEFORE start hooks
      ansible.builtin.debug: { var: _start_before }
      when: _start_before | length > 0
    - name: (check) would start (Linux)
      ansible.builtin.debug: { var: _start_cmds }
    - name: (check) AFTER start hooks
      ansible.builtin.debug: { var: _start_after }
      when: _start_after | length > 0
    - name: Push simulated start summary (Linux)
      ansible.builtin.set_fact:
        start_health_summary: "{{ (start_health_summary | default([])) + [ {'component': 'all', 'start_fail': false, 'health_fail': false} ] }}"
      when: ansible_check_mode | default(false)

- block:
    - name: BEFORE start hooks
      ansible.builtin.shell: "{{ item }}"
      args: { executable: /bin/bash }
      loop: "{{ _start_before }}"
      failed_when: false
      changed_when: true
      when: _start_before | length > 0

    - name: Start services (Linux)
      ansible.builtin.shell: "{{ item }}"
      args: { executable: /bin/bash }
      loop: "{{ _start_cmds }}"
      register: _start_out
      failed_when: false
      changed_when: true

    - name: Collect failed start results (for debug; do not fail yet)
      ansible.builtin.set_fact:
        _failed_start_results: "{{ _start_out.results | default([]) | selectattr('rc','defined') | selectattr('rc','ne',0) | list }}"
      when: (_start_out.results | default([]) | selectattr('rc','defined') | selectattr('rc','ne',0) | list | length) > 0

    - name: Debug failed starts (rc/stdout/stderr)
      ansible.builtin.debug:
        msg: >-
          start_failures: {{ _failed_start_results | default([]) | map(attribute='item') | list | to_nice_json }}
      when: _failed_start_results is defined and _failed_start_results | length > 0

    - name: AFTER start hooks
      ansible.builtin.shell: "{{ item }}"
      args: { executable: /bin/bash }
      loop: "{{ _start_after }}"
      failed_when: false
      changed_when: true
      when: _start_after | length > 0

    - name: Push start summary (Linux)
      ansible.builtin.set_fact:
        start_health_summary: "{{ (start_health_summary | default([])) + [ {'component': 'all', 'start_fail': false, 'health_fail': false } ] }}"
      when: not (ansible_check_mode | default(false))
